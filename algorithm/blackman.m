ar = [70   63   61   62   64   68   55   60   64   59   45   55   57   14   52   52   35   52   65   62   36   17   49   69   65   42   38   59   61   47   48   55 ...
  41   40   53   36   33   52   69   68   44   54   56   29   51   54   50   18   37   67   79   72   70   57   43   39   29   60   70   67   54   55    5   60 ...
  63   21   29   56   54   60   70   59   62   75   61   49   66   62   63   67   60   61   60   55   73   82   81   69   74   71   52   55   44   60   64   55 ...
  49   73   75   65   56   65   47   56   82   83   50   69   73   65   44   53   70   67   32   66   74   70   64   50   27   65   76   76   76   75   77   81 ...
  76   57   38   58   69   75   81   83   76   50   44   65   77   73   63   77   78   72   70   65   58   68   65   47   48   56   53   65   77   73   67   64 ...
  66   70   65   61   43   45   60   71   64   63   57   46   66   69   71   73   52   55   60   58   69   72   74   81   76   56   60   75   75   67   55   45 ...
  39   60   74   71   50   56   60   71   70   44   64   72   68   58   68   63   49   52   66   67   61   67   76   76   72   66   66   37   30   64   72   80 ...
  75   30   63   69   64   65   78   71   42   67   42   59   77   79   74   70   63    0   53   61   48   31   39   52   65   70   54   61   62   48   71   75 ...
  70   46   63   68   68   75   83   80   77   76   64   55   59   37   56   67   66   50   71   84   84   80   69   41   36   47   68   73   59   24   50   70 ...
  76   77   82   80   64   68   76   70   53   67   70   61   41   64   70   73   77   68   51   66   64   65   74   82   85   71   26   59   60   53   49   76 ...
  74   68   75   72   75   77   73   71   73   79   74   55   71   74   70   65   71   78   78   75   69   62   51   39   55   68   76   71   53   71   66   66 ...
  71   61   75   75   60   49   31   60   71   74   78   77   75   66   66   71   68   61   54   59   68   62   62   62   59   65   60   66   56   34   64   68 ...
  67   79   79   62   55   58   51   59   75   79   45   68   85   84   70   54   63   67   62   69   64   64   69   82   88   81   63   60   33   62   60   75 ...
  82   71   58   71   75   33   59   66   74   48   42   55   72   75   58   51   68   53   72   75   61   80   75   41   72   76   58   70   67   61   62   72 ...
  85   84   81   72   58   47   72   67   50   56   66   66   63   67   61   49   65   55   68   69   67   78   72   61   52   66   78   81   80   70   53   26 ...
  61   83   83   60   73   58   58   44   65   77   80   70   50   55   60   57   50   59   64   78   85   84   73   77   76   74   79   70   76   55   86  -56 ...
 -14   -1  -10  -47   74   63   78   77   43   75   63   77   79   80   77   92   94   83   69   72   69   65   29   46   66   77   80   78   81   83   76   51 ...
  40   38   63   66   70   61   42   59   66   48   22   56   56   61   76   68   77   69   68   84   82   80   68   64   81   64   67   79   87   81   59   55 ...
  75   77   69   68   34   68   80   79   68   52   28   72   82   81   69   53   50   53   25   61   63   65   20   68   71   41   55   62   64   82   82   80 ...
  80   77   61   35   45   49   38   73   76   55   66   62   64   66   50   57   75   72   62   74   76   79   69   59   42   68   65   40   54   37   67   61 ...
  44   63   62   63   55   64   52   67   81   86   82   69   44   54   72   58   31   59   66   70   75   55   63   73   52   54   64   57   53   44   46   41 ...
  53   73   73   49   71   74   70   46   70   81   72   53   66   62   48   62   65   56   51   64   65   52   56   67   54   45   62   67   61   77   85   56 ...
  74   78   76   75   71   67   64   45   68   62   47   65   61   50   77   79   69   60   56   51   24   65   75   72   66   68   69   67   52   49   52   64 ...
  71   46   50   47   46   58   32   49   60   70   79   87   89   77   26   71   70   72   83   89   86   82   83   70   70   74   70   63   53   35   59   57 ...
  65   71   69   60   37   41   55   63   67   76   72   65   73   73   63   53   55   69   71   61   52   72   77   72   63   76   83   73   64   67   66   69 ...
  25   74   80   72   64   73   81   72   21   58   62   60   58   53   58   62   67   61   58   67   58   44   47   51   47   49   60   65   69   72   75   65 ...
  39   66   67   67   68   64   58   46   42   49   79   85   71   51   77   78   66   67   56   69   73   73   77   75   56   53   48   52   60   66   72   76 ...
  79   70   68   66   71   72   67   73   78   65   55   70   66   53   61   72   77   71   59   64   31   40   51   60   83   94   88   68   62   66   64   37 ...
  65   77   75   74   75   65   36   34   26   36   23   55   68   64   64   68   63   71   66   62   63   61   57   62   75   74   74   81   81   84   83   56 ...
  55   47   63   41   63   66   72   68   39   73   75   75   79   76   73   70   74   81   73   48   46   65   59   39   49   67   69   59   61   35   59   67 ...
  59   60   22   65   74   78   76   52   55   61   52   24   64   74   72   33   60   53   41   43   35   50   55   55   58   53   60   65   57   31   52   38 ...
  49   58   51   41   50   68   61   22   35   38   55   48   31   45   53   53   50   24   57   50   53   54   43   66   63   60   70   67   55   42   57   68];


global int    N     = 20;   #Длина фильтра
global double Fd    = 2000; #Частота дискретизации входных данных
global double Fs    = 20;   #Частота полосы пропускания
global double Fx    = 50;   #Частота полосы затухания

global double H     = [];    #Импульсная характеристика фильтра
global double H_id  = [];    #Идеальная импульсная характеристика
global double W     = [];    #Весовая функция

out = [];
in = exp(-ar/100);
sizeIn = length(in);
#plot(y);

#инициализация массивов
for i= 1:sizeIn
  H(end+1) = 0;
  H_id(end+1) = 0;
  W(end+1) = 0;
endfor  


# Расчет импульсной характеристики фильтра
Fc = (Fs + Fx) / (2 * Fd);
M_PI = pi;

for i= 0:N-1
  if (i == 0) 
    H_id(i+1) = 2*M_PI*Fc;
  else 
    H_id(i+1) = sin(2*M_PI*Fc*i )/(M_PI*i)
  endif;
  # весовая функция Блекмена
  W(i+1) = 0.42 - 0.5 * cos((2*M_PI*i) /( N-1)) + 0.08 * cos((4*M_PI*i) /( N-1));
  H(i+1) = H_id(i+1) * W(i+1);
endfor;
    # Нормировка импульсной характеристики
SUM=0;
for i= 0:N-1
    SUM = SUM + H(i+1);
endfor;

for i= 0:N-1
  H(i+1) = H(i+1) / SUM; #сумма коэффициентов равна 1
endfor;

    # Фильтрация входных данных
for i= 0:(sizeIn-1)
  out(i+1)=0.;
  for j= 0:N-2     # та самая формула фильтра
    if(i-j>=0)
      out(i+1) = out(i+1) + H(j+1)*in(i-j+1);
    endif  
  endfor
endfor

x = 1:1:1024;
#plot(x, out, '*', x, in, '.');
plot(out);
